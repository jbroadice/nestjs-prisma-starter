datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  email     String    @unique
  role      Role
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  bookings  ParticipantsOnBookings[] @relation("partcipantOnBooking")
  assignedParticipantsOnBookings ParticipantsOnBookings[] @relation("assignedParticipantOnBooking")
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Booking {
  id           String   @id @default(cuid())
  active       Boolean? @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  timeStart    DateTime
  timeEnd      DateTime
  title        String?
  description  String?
  participants ParticipantsOnBookings[]
}

model ParticipantsOnBookings {
  participant     User     @relation(name: "partcipantOnBooking", fields: [participantId], references: [id])
  participantId   String
  participantRole ParticipantRole
  booking         Booking  @relation(fields: [bookingId], references: [id])
  bookingId       String
  assignedAt      DateTime @default(now())
  assignedBy      User?    @relation(name: "assignedParticipantOnBooking", fields: [assignedById], references: [id])
  assignedById    String?

  @@id([participantId, bookingId])
}

enum Role {
  ADMIN
  TRAINER
  CLIENT
}

enum ParticipantRole {
  ORGANISER
  TRAINER
  CLIENT
  GUEST
}